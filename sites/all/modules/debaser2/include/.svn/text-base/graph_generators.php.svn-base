<?php
    

/**
 * 
 * @param object $chart_data
 * @param object $chart_labels
 * @param object $title
 * @param object $width
 * @param object $height
 * @param object $legend
 * @return 
 */
function multi_bar_chart($chart_data, $chart_labels, $title, $width, $height) {
    $g = new open_flash_chart_api();
	
	$i=0;
	foreach ($chart_data as $data) {
		$vals = $data['data'];
		$bar = new bar(12, presetColours($i));
		$bar->key($data['legend'], 10);
		$bar->data = $vals;
		
		$g->data_sets[] = $bar;
		$i++;
	}
 
    
    // create the graph object:
    
    $g->title($title, '{font-size:10px; color: #FFFFFF; margin: 5px; background-color: #505050; padding:5px; padding-left: 20px; padding-right: 20px;}');
    $g->set_width(500);
	$g->set_height(500);
   
    
    //$g->set_x_axis( 12 );
    $g->x_axis_colour('#909090', '#ADB5C7');
    $g->y_axis_colour('#909090', '#ADB5C7');
    $g->set_tool_tip( '#key#: #val# cases (#x_label#)<br>Key: #key#<br>Age: #x_label#<br>Cases: #val#' );
    $g->set_x_labels($chart_labels);
    $g->set_y_max(10);
    $g->y_label_steps(5);
    $g->set_y_legend(t('Cases'), 12, '#736AFF');
    return $g->render();
}


function correlative_bar_chart($chart_data, $chart_labels, $title, $x_label, $y_label, $key, $max = 20, $width =500, $height = 500) {
    $g = new open_flash_chart_api();
	$mod = $max%10;
	$max +=10-$max%10;
	$g->set_width(680);
	$g->set_height(300);
	$i=0;
	foreach ($chart_data as $data) {
		
		$vals = $data['data'];
		$bar = new bar(80, presetColours($i));
		$bar->key($data['legend'], 10);
		$bar->data = $vals;
		
		$g->data_sets[] = $bar;
		$i++;
	}
 
    
    // create the graph object:
    
    $g->title($title, '{font-size:10px; color: #FFFFFF; margin: 5px; background-color: #505050; padding:5px; padding-left: 20px; padding-right: 20px;}');
    
   
    
    //$g->set_x_axis( 12 );
    $g->x_axis_colour('#909090', '#ADB5C7');
    $g->y_axis_colour('#909090', '#ADB5C7');
    $g->set_tool_tip( '#key#: #val# '.strtolower($y_label).'(s) (#x_label#)<br>'.$key.': #key#<br>'.$x_label.': #x_label#<br>'.$y_label.'(s): #val#' );
    $g->set_x_labels($chart_labels);
    $g->set_y_max($max);
    $g->y_label_steps(5);
    $g->set_y_legend($y_label, 12, '#736AFF');
    $g->set_x_legend($x_label, 12, '#736AFF');
    $g->set_bg_colour('0xFFFFFF');
    return $g->render();
}

function generate_bar_chart($chart_data, $chart_labels, $title, $width, $height, $y_legend='Cases') {
	$g = new open_flash_chart_api();
	$g->title($title, '{font-size:10px; color: #FFFFFF; margin: 5px; background-color: #505050; padding:5px; padding-left: 20px; padding-right: 20px;}');
    $g->set_width(680);
	$g->set_height(300);
	
	//
	// BAR CHART:
	//
	$g->set_data( $chart_data );
	$g->bar( 80, presetColours(0), 'Number of '.$y_legend, 10 );
	//
	// ------------------------
	//
	
	//
	// X axis tweeks:
	//
	$g->set_x_labels( $chart_labels );
	//
	// set the X axis to show every 2nd label:
	//
	$g->set_x_label_style( 10, '#9933CC', 0, 1 );
	//
	// and tick every second value:
	//
	$g->set_x_axis_steps( 1 );
	//
	
	
	$g->y_label_steps( 4 );
	$g->set_y_legend( $y_legend, 12, '#736AFF' );
	$g->set_bg_colour('0xFFFFFF');
	return $g->render();
}


/**
 * generates a pie chart based on the data from the user
 * @param int array $chart_data
 * @param String $chart_labels
 * @param String $title title of the graph
 * @param int $width
 * @param int $height
 * @return The javascript needed to embed the graph
 */
function generate_pie_chart($chart_data, $chart_labels, $title, $width, $height, $y_legend) {
    drupal_add_js($base_path."/sites/all/modules/debaser2_custom/swfobject/swfobject.js");
    
    $colors = array();
    for ($i = 0; $i < count($chart_data); $i++) {
        $colors[$i] = presetColours($i);
    }
    $chart = new open_flash_chart_api();
    $chart->pie(60, '#505050', '{font-size: 12px; color: #404040;');
    $chart->pie_values($chart_data, $chart_labels);
    $chart->pie_slice_colours($colors);
    $chart->set_tool_tip('Value: #val# '.$y_legend.' ');
    $chart->title($title, '{font-size:18px; color: #d01f3c}');
    $chart->set_width($width);
    $chart->set_height($height);
    return $chart->render();
}

function presetColours($i){
	$colours = array(
	'#49aab7',
	'#e38e8e',
	'#449194',
	'#8ee38e',
	'#49b74d',
	'#b749b3',
	'#b78749',
	'#4975b7',
	'#49b79f',
	'#7cb749',
	'#94444b',
	);
	return $colours[$i];
}

function randomColour(){
	srand((double) microtime() * 1004000);
	$colors = sprintf("#%u%u%u%u%u%u", dechex(mt_rand(0, 15)), dechex(mt_rand(0, 15)), dechex(mt_rand(0, 15)), dechex(mt_rand(0, 15)), dechex(mt_rand(0, 15)), dechex(mt_rand(0, 15)));
	return $colors;
}